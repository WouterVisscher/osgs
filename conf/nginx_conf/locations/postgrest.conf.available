        ############################################################

        # PostgREST related
        # expose to the outside world
        location /api/ {
           #
           # Next section copied from 
           # https://github.com/johnnylambada/docker-postgrest-swagger-sample/blob/main/postgrest-proxy/nginx.conf
           #
           if ($request_method = 'OPTIONS') {
               add_header 'Access-Control-Allow-Origin $http_origin' always;
               # Om nom nom cookies
               add_header 'Access-Control-Allow-Credentials' 'true';
               add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';
               # Custom headers and headers various browsers *should* be OK with but aren't
               add_header 'Access-Control-Allow-Headers' 'DNT,X-Mx-ReqToken,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type';
               # Tell client that this pre-flight info is valid for 20 days
               add_header 'Access-Control-Max-Age' 1728000;
               add_header 'Content-Type' 'text/plain charset=UTF-8';
               add_header 'Content-Length' 0;
               return 204;
           }

           if ($request_method = 'POST') {
               add_header 'Access-Control-Allow-Origin $http_origin' always;
               add_header 'Access-Control-Allow-Credentials' 'true';
               add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';
               add_header 'Access-Control-Allow-Headers' 'DNT,X-Mx-ReqToken,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type';
           }

           if ($request_method = 'GET') {
               add_header 'Access-Control-Allow-Origin $http_origin' always;
               add_header 'Access-Control-Allow-Credentials' 'true';
               add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';
               add_header 'Access-Control-Allow-Headers' 'DNT,X-Mx-ReqToken,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type';
           }        

           # Proxy our postgrest server's port 3000
           # proxy_pass http://postgrest:3000;
           proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
           proxy_set_header Host $http_host;
           proxy_set_header Accept-Encoding "";
           proxy_redirect off;

           # This is what it's all about -- Add the "securityDefinitions" to the JSON output
           sub_filter '"externalDocs"' '"securityDefinitions":{"JWT":{"type":"apiKey","in":"header","name":"Authorization"}},"security":[{"JWT":[]}],"responses":{"UnauthorizedError":{"description":"Access token is missing or invalid"}},"externalDocs"';
           sub_filter_types application/openapi+json;
           sub_filter_once off;
           #
           # End of section copied from 
           # https://github.com/johnnylambada/docker-postgrest-swagger-sample/blob/main/postgrest-proxy/nginx.conf
           #

           default_type  application/json;
           proxy_hide_header Content-Location;
           add_header Content-Location  /api/$upstream_http_content_location;
           proxy_set_header  Connection "";
           proxy_http_version 1.1;
           proxy_pass http://postgrest/;
        }
